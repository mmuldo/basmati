## USEFUL COMMANDS:
# xbindkeys -k  | gives you the key code for a pressed key or mouse button

{% for i in range(10) %}
set $ws{{ i }} "{{ i }}"
{% endfor %}

#Needed for i3-gaps
hide_edge_borders both
for_window [class="^.*"] border pixel 4
{% for direction, gap in {'inner': 25, 'top': 30, 'left': 10, 'right': 10, 'bottom': 30}.items() %}
gaps {{ direction }}  {{ gap }}
{% endfor %}

###################
## COLOR PALETTE ##
###################

# [colors]
# ===================== #
# class                 border   backgr. text   indicator child_border
{% for state, colors in {
    'focused':          [(0, 3), (0, 3), (0, 0), (0, 1), (0, 3)],
    'focused_inactive': [(0, 0), (0, 0), (0, 7), (0, 1), (0, 0)],
    'unfocused':        [(0, 0), (0, 0), (0, 7), (0, 1), (0, 0)],
    'urgent':           [(1, 1), (1, 1), (1, 0), (1, 1), (1, 1)],
    'placeholder':      [(1, 0), (1, 0), (1, 7), (1, 0), (1, 0)]
    }.items() %}
client.{{ state }}      {% for p_idx, c_idx in colors %}{{ palettes[p_idx].colors[c_idx] }} {% endfor %}

{% endfor %}
client.background {{ palettes[0].colors[7] }}

# windows key, main modifier
set $mod Mod4
# alt key, secondary (super) modifier
set $sup Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Monospace 14, Awesome 11

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show drun
# bindsym $sup+c exec conky

# lastpass
# bindsym $mod+p exec ~/.local/bin/lpass-util
bindsym $mod+p exec passmenu

# emoji
bindsym $mod+o exec ~/.local/bin/copy-emoji

## alternative resize commands
bindsym $mod+Shift+y resize shrink width 10 px or 10 ppt
bindsym $mod+Shift+u resize shrink height 10 px or 10 ppt
bindsym $mod+Shift+o resize grow width 10 px or 10 ppt

#TODO switch this mode for dot displays select
# bindsym  $mod+Shift+a mode $mode_randr

# good example on how to work with modes:
# http://christopherdecoster.com/posts/i3-wm/
set $mode_gaps "[(g)aps] | Outer (O+/o-), Inner (I+/i-)"
bindsym $mod+g mode $mode_gaps
mode $mode_gaps {
bindsym i gaps inner current minus 5
bindsym Shift+i gaps inner current plus 5
bindsym o gaps outer current minus 5
bindsym Shift+o gaps outer current plus 5
bindsym Return mode "default"
bindsym Escape mode "default"
}

#####################################################
##            Dropdown/Scratchpad Windows          ##
#####################################################

## Termite ##
exec --no-startup-id termite --name "dropdown"
for_window [instance="dropdown"] floating enable
# positions and screensize below is set for dual monitor, left 1080 and right 1440
# 1440 is main, termite shows up in the middle of the main monitor
#                                           width height             x(left) y(top)
for_window [instance="dropdown"] resize set 800   900, move position 2800    400
for_window [instance="dropdown"] move scratchpad
for_window [instance="dropdown"] border pixel 5
bindsym $mod+n [instance="dropdown"] scratchpad show

#######################
## monitor shortcuts ##
#######################

## move monitor left
bindsym $mod+c move workspace to output left
## move monitor right
bindsym $mod+u move workspace to output right

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the chld container
#bindsym $mod+d focus child


# switch to workspace
{% for i in range(10) %}
bindsym $mod+{{ i }} workspace $ws{{ i }}
{% endfor %}

# move focused container to workspace
{% for i in range(10) %}
bindsym $mod+Shift+{{ i }} move container to workspace $ws{{ i }}
{% endfor %}

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# power options (restart|shutdown)
bindsym $mod+Shift+e exec ~/.local/bin/power-control

# resize window (you can also use the mouse for that)
mode "resize" {
    bindsym h resize shrink width 20 px or 10 ppt
    bindsym j resize shrink height 20 px or 10 ppt
    bindsym k resize grow height 20 px or 10 ppt
    bindsym l resize grow width 20 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

bar {
    i3bar_command null
}

for_window [title="i3-helm"] floating enable

# audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 1%+
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 1%-
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master toggle
bindsym XF86AudioPlay exec --no-startup-id sp play # play acts as a toggle
bindsym XF86AudioNext exec --no-startup-id sp next
bindsym XF86AudioPrev exec --no-startup-id sp prev
bindsym XF86AudioStop exec --no-startup-id sp pause

# brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 5
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 5

## move workspace to screen
for_window [class="trust"] floating enable

# FIREFOX
# force private firefox windows to workspace 7
for_window [title=".*\(Private Browsing\).*"] move to workspace $ws7
# shortcut to open private browser
bindsym $mod+Shift+f exec --no-startup-id "firefox --private-window duckduckgo.com"; workspace $ws7
# END FIREFOX

{% for ws, screen in {
    0: 'primary',
    1: 'secondary',
    2: 'primary',
    3: 'secondary',
    4: 'primary',
    7: 'secondary'
    }.items() %}
workspace $ws{{ ws }} output {{ screen }}
{% endfor %}

## startup applications
exec_always --no-startup-id "feh --no-fehbg --bg-fill '/home/matt/.background' '/home/matt/.background'"
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec --no-startup-id dropbox
#exec --no-startup-id picom
exec --no-startup-id dunst

exec --no-startup-id spotify; workspace $ws0
exec --no-startup-id emacs; workspace $ws1
exec --no-startup-id alacritty; workspace $ws2
exec --no-startup-id firefox; workspace $ws3
